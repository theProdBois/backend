API Endpoints Documentation

1. Endpoint: POST /apps
   Description: Add a new app with details provided in the request body.
   Request Body (example):
   {
     "packageName": "com.example.app",
     "name": "Example App",
     "shortDescription": "Short description",
     "fullDescription": "Full description",
     "developerId": 1,
     "developerName": "Dev Name",
     "categoryId": 2,
     "tags": ["tag1", "tag2"],
     "apkFilePath": "/path/to/apk"
   }
   Returns:
     - Success (201): { message: 'App added successfully', app: { ...newApp } }
     - Error (500): { error: 'Internal server error' }

2. Endpoint: GET /apks
   Description: List all apps with their versions.
   Returns:
     - Success (200): Array of apps with their versions.
     - Error (500): { error: 'Internal server error' }

3. Endpoint: GET /apks/category/:categoryId
   Description: List APKs filtered by category ID.
   Returns:
     - Success (200): Array of APKs in the specified category.
     - Error (500): { error: 'Internal server error' }

4. Endpoint: POST /register
   Description: Register a new user.
   Request Body (example):
   {
     "email": "user@example.com",
     "password": "password123",
     "first_name": "John",
     "last_name": "Doe",
     "phone": "1234567890",
     "date_of_birth": "1990-01-01",
     "gender": "male",
     "city": "CityName",
     "profile_picture_url": "http://example.com/pic.jpg"
   }
   Returns:
     - Success (201): { message: 'User registered successfully', token: string, user: { id, email, first_name, last_name } }
     - Error (400): { error: 'User already exists' }
     - Error (500): { error: 'Internal server error' }

5. Endpoint: POST /login
   Description: User login.
   Request Body (example):
   {
     "email": "user@example.com",
     "password": "password123"
   }
   Returns:
     - Success (200): { message: 'Login successful', token: string, user: { id, email, first_name, last_name } }
     - Error (401): { error: 'Invalid credentials' }
     - Error (500): { error: 'Internal server error' }

6. Endpoint: GET /me
   Description: Get current user info from token (requires authentication).
   Returns:
     - Success (200): { user: decoded token user info }
     - Error (401): { error: 'Authentication token required' }
     - Error (403): { error: 'Invalid token' }

7. Endpoint: POST /categories
   Description: Create a new category.
   Request Body (example):
   {
     "name": "Category Name",
     "slug": "category-slug",
     "description": "Description of category",
     "iconUrl": "http://example.com/icon.png",
     "sortOrder": 1
   }
   Returns:
     - Success (201): Newly created category object.
     - Error (500): { error: 'Internal server error' }

8. Endpoint: POST /appVersions
   Description: Create a new app version.
   Request Body (example):
   {
     "appId": 1,
     "versionName": "1.0.0",
     "versionCode": 1,
     "fileName": "app.apk",
     "filePath": "/path/to/app.apk",
     "fileSize": 123456,
     "fileHash": "hashstring",
     "mimeType": "application/vnd.android.package-archive",
     "minSdkVersion": 21,
     "targetSdkVersion": 30,
     "supportedAbis": ["armeabi-v7a", "arm64-v8a"],
     "permissions": ["INTERNET", "ACCESS_NETWORK_STATE"],
     "releaseNotes": "Initial release",
     "releaseNotesLanguage": "en",
     "status": "draft",
     "rolloutPercentage": 100,
     "downloadCount": 0,
     "crashRate": 0
   }
   Returns:
     - Success (201): Newly created app version object.
     - Error (500): { error: 'Internal server error' }

9. Endpoint: POST /developers
   Description: Create a new developer.
   Request Body (example):
   {
     "name": "Developer Name",
     "email": "dev@example.com",
     "company": "Company Name",
     "website": "http://example.com",
     "verified": true
   }
   Returns:
     - Success (201): Newly created developer object.
     - Error (500): { error: 'Internal server error' }
